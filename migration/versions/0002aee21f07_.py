"""empty message

Revision ID: 0002aee21f07
Revises:
Create Date: 2022-09-11 20:39:57.568936

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "0002aee21f07"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "cafe",
        sa.Column("cafe_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("external_key", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("address", sa.String(length=258), nullable=True),
        sa.Column("description", sa.String(length=512), nullable=True),
        sa.Column("latitude", sa.Float(), nullable=True),
        sa.Column("longitude", sa.Float(), nullable=True),
        sa.Column("city", sa.String(length=64), nullable=True),
        sa.Column("state", sa.String(length=64), nullable=True),
        sa.Column("remaining_address", sa.String(length=128), nullable=True),
        sa.Column("postcode", sa.String(length=64), nullable=True),
        sa.Column("surrounding_station", sa.String(length=64), nullable=True),
        sa.Column("is_parking", sa.Boolean(), nullable=True),
        sa.Column("naver_map_url", sa.String(length=512), nullable=True),
        sa.Column("tel", sa.String(length=32), nullable=True),
        sa.Column("count_like", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("cafe_id"),
    )
    op.create_index(op.f("ix_cafe_cafe_id"), "cafe", ["cafe_id"], unique=False)
    op.create_index(op.f("ix_cafe_external_key"), "cafe", ["external_key"], unique=True)
    op.create_table(
        "user",
        sa.Column("user_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("user_id"),
    )
    op.create_index(op.f("ix_user_user_id"), "user", ["user_id"], unique=False)
    op.create_table(
        "cafe_tag",
        sa.Column("cafe_tag_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("cafe_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["cafe_id"],
            ["cafe.cafe_id"],
        ),
        sa.PrimaryKeyConstraint("cafe_tag_id"),
    )
    op.create_index(
        op.f("ix_cafe_tag_cafe_tag_id"), "cafe_tag", ["cafe_tag_id"], unique=False
    )
    op.create_table(
        "comment",
        sa.Column("comment_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("external_key", sa.String(length=50), nullable=False),
        sa.Column("cafe_id", sa.Integer(), nullable=True),
        sa.Column("comment", sa.String(length=512), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["cafe_id"],
            ["cafe.cafe_id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.user_id"],
        ),
        sa.PrimaryKeyConstraint("comment_id"),
    )
    op.create_index(
        op.f("ix_comment_comment_id"), "comment", ["comment_id"], unique=False
    )
    op.create_index(
        op.f("ix_comment_external_key"), "comment", ["external_key"], unique=True
    )
    op.create_table(
        "image",
        sa.Column("image_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("cafe_id", sa.Integer(), nullable=True),
        sa.Column("is_represenative", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["cafe_id"],
            ["cafe.cafe_id"],
        ),
        sa.PrimaryKeyConstraint("image_id"),
    )
    op.create_index(op.f("ix_image_image_id"), "image", ["image_id"], unique=False)
    op.create_table(
        "opening_day",
        sa.Column("opening_day_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("cafe_id", sa.Integer(), nullable=True),
        sa.Column("week", sa.String(length=32), nullable=True),
        sa.Column("start_time_hour", sa.Integer(), nullable=True),
        sa.Column("start_time_miniute", sa.Integer(), nullable=True),
        sa.Column("end_time_hour", sa.Integer(), nullable=True),
        sa.Column("end_time_miniute", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["cafe_id"],
            ["cafe.cafe_id"],
        ),
        sa.PrimaryKeyConstraint("opening_day_id"),
    )
    op.create_index(
        op.f("ix_opening_day_opening_day_id"),
        "opening_day",
        ["opening_day_id"],
        unique=False,
    )
    op.create_table(
        "vote",
        sa.Column("vote_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("cafe_id", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("is_like", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["cafe_id"],
            ["cafe.cafe_id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.user_id"],
        ),
        sa.PrimaryKeyConstraint("vote_id"),
    )
    op.create_index(op.f("ix_vote_vote_id"), "vote", ["vote_id"], unique=False)
    op.create_table(
        "tag",
        sa.Column("tag_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("cafe_tag_id", sa.Integer(), nullable=True),
        sa.Column("tag", sa.String(length=128), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["cafe_tag_id"],
            ["cafe_tag.cafe_tag_id"],
        ),
        sa.PrimaryKeyConstraint("tag_id"),
    )
    op.create_index(op.f("ix_tag_tag_id"), "tag", ["tag_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_tag_tag_id"), table_name="tag")
    op.drop_table("tag")
    op.drop_index(op.f("ix_vote_vote_id"), table_name="vote")
    op.drop_table("vote")
    op.drop_index(op.f("ix_opening_day_opening_day_id"), table_name="opening_day")
    op.drop_table("opening_day")
    op.drop_index(op.f("ix_image_image_id"), table_name="image")
    op.drop_table("image")
    op.drop_index(op.f("ix_comment_external_key"), table_name="comment")
    op.drop_index(op.f("ix_comment_comment_id"), table_name="comment")
    op.drop_table("comment")
    op.drop_index(op.f("ix_cafe_tag_cafe_tag_id"), table_name="cafe_tag")
    op.drop_table("cafe_tag")
    op.drop_index(op.f("ix_user_user_id"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_cafe_external_key"), table_name="cafe")
    op.drop_index(op.f("ix_cafe_cafe_id"), table_name="cafe")
    op.drop_table("cafe")
    # ### end Alembic commands ###
